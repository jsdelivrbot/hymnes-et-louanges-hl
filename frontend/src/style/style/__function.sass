// *******************
// BREAKPOINTS
// ********************
=breakpoint($point)
  @if $point == desktop // Large
    @media (min-width : 1824px)
      @content
  @else if $point == laptop
    @media (min-width : 1024px) and (max-width : 1824px)
      @content
  @else if $point == tablet
    @media (min-width: 768px) and (max-width: 1024px) and (-webkit-min-device-pixel-ratio: 1)
      @content
  @else if $point == mobile
    @media (max-width: 768px) and (-webkit-min-device-pixel-ratio: 1)
      @content

// ********************
// FUNCTIONS
// ********************
=action_button_hover()
  color: red
=action_button($button_color)
  opacity: 0
  +responsive('padding', 10px, 1.1)
  +responsive('font-size', 0.9em, 1.1)
  background: transparent
  border-radius: 4px
  font-weight: 300
  border: $button_color 1px solid
=border-radius($radius)
  -webkit-border-radius: $radius
  -moz-border-radius:    $radius
  -ms-border-radius:     $radius
  border-radius:         $radius

=responsive($style, $size, $factor)
  +breakpoint(desktop)
    #{$style}: $size * $factor
  +breakpoint(laptop)
    #{$style}:  $size
  +breakpoint(tablet)
    #{$style}: $size / $factor
  +breakpoint(mobile)
    #{$style}: $size / ($factor * $factor)

=mobile_ready($style, $regular, $mobile)
  #{$style}: $regular
  +breakpoint(mobile)
    #{$style}: $mobile

=cross_browsers($style, $value)
  -webkit-#{$style}: $value
  -moz-#{$style}: $value
  -o-#{$style}: $value
  #{$style}: $value

=keyframes($animationName)
  @-webkit-keyframes #{$animationName}
    @content

  @-moz-keyframes #{$animationName}
    @content

  @-o-keyframes #{$animationName}
    @content

  @keyframes #{$animationName}
    @content

// Add specific functions
=recent_post($factor)
  h3
    font-size: $factor * 1.3em
  h5
    margin: 10px 0
    font-size: $factor * 0.8em
  h3, h5, a
    font-weight: 400
  p
    font-weight: 300
    font-style: italic
    font-size: $factor * 1em
    line-height: $factor * 1.7em


// ************************
// App specific function
// ************************

// Variables
$floating_label_color: #142132

// Functions
=transition($speed)
  transition: all $speed cubic-bezier(0.2, 0, 0.03, 1)
  
=move_label($color, $fontsize)
  font-size: $fontsize / 1.3
  color: $color
  top: -2.5em
  +transition(0.3s)

=create_floating_input($name, $fontsize, $margin, $border_width, $label_color, $placeholder_color, $background)
  .#{$name}
    float: left
    margin: $fontsize 0
    position: relative
    label, i
      padding: $margin
      position: absolute
      top: 0
      +transition(0.3s)
    label
      font-size: $fontsize
      color: $placeholder_color
      left: 0
      pointer-events: none

    input[type="text"], textarea
      padding: $margin * 1.1
      border: none
      border-right: $border_width solid $label_color
      outline: 0
      font-size: $fontsize
      background: $background
      ~ .button
        right: 0
        opacity: 0
        cursor: pointer
      ~ span
        // Border Effect
        display: block
        width: 0
        height: $border_width
        background: $label_color
        position: absolute
        bottom: 0
        left: 0
        +transition(0.3s)
      &:valid
        border: none
        background: transparent
        ~ .button
          opacity: 1
        ~ label
          +move_label($label_color, $fontsize)
        ~ span
          width: 100%
          +transition(0.3s)

=shadow()
  +cross_browsers(box-shadow, 2px 4px 5px 0px rgba(0, 0, 0, 0.26))

=elevate_2dp()
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12)

=uniform_col($arr)
  @each $i in $arr
    .row-#{$i}
      width: 100%
    .row-#{$i}:after
      content: ""
      clear: both
      display: block
    .row-#{$i} .col
      width: 100%/$i

// Custom size col
// e.g. +col(3, 1, 100%)
=col($size, $arr, $width)
  @each $i in $arr
    .col-#{$i}-#{$size}
      width : 100% * ($i/$size)
      +breakpoint(mobile)
        width: $width
        @content
